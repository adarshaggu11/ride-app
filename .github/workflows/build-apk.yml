name: Build Android APK

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Setup Java JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '21'
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Accept Android SDK licenses
      run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true

    - name: Install Android SDK components
      run: |
        echo "ANDROID_HOME: $ANDROID_HOME"
        echo "Installing platforms;android-35 and build-tools;35.0.0..."
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install "platforms;android-35" "build-tools;35.0.0"
        echo "Verifying installation:"
        ls -la $ANDROID_HOME/platforms/ 2>/dev/null || echo "Warning: platforms directory not found"
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --list_installed | grep -E "android-35|35.0.0" || echo "Warning: SDK components not listed"

    - name: Install dependencies
      run: npm ci
    
    - name: Build web app
      run: npm run build
    
    - name: Verify build output
      run: |
        echo "Checking if dist folder exists..."
        if [ -d "dist" ]; then
          echo "✓ dist folder found"
          ls -la dist | head -20
        else
          echo "✗ ERROR: dist folder not found!"
          exit 1
        fi
    
    - name: Sync Capacitor
      run: npx cap sync android
    
    - name: Grant execute permission for gradlew
      run: chmod +x android/gradlew
    
    - name: Build Debug APK
      working-directory: android
      run: |
        echo "=== Starting Gradle build ==="
        ./gradlew assembleDebug \
          --no-daemon \
          --stacktrace \
          --warning-mode=all 2>&1 | tee ../build-output.log
        BUILD_STATUS=${PIPESTATUS[0]}
        echo "=== Build exit code: $BUILD_STATUS ==="
        if [ $BUILD_STATUS -ne 0 ]; then
          echo "=== Build failed! Capturing logs ==="
          exit $BUILD_STATUS
        fi
        echo "=== Build succeeded ==="
    
    - name: List APK output
      if: always()
      run: |
        echo "Searching for APK files..."
        find android -name "*.apk" -type f 2>/dev/null || echo "No APK files found"
        echo "Build output directory contents:"
        ls -R android/app/build/outputs 2>/dev/null || echo "No outputs directory"
    
    - name: Upload APK
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: app-debug-apk
        path: android/app/build/outputs/apk/debug/*.apk
        retention-days: 30
    
    - name: Upload build logs on failure
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: build-failure-logs
        path: |
          build-output.log
          android/build/reports/**/*
          android/app/build/reports/**/*
        if-no-files-found: warn
        retention-days: 7
